using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Identity;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.RazorPages;
using Microsoft.Extensions.Logging;
using System.Threading.Tasks;
using lmsextreg.Data;
using Microsoft.AspNetCore.Authentication;


namespace lmsextreg.Pages.Account
{
    [AllowAnonymous]
    public class LoginPrepModel : PageModel
    {
       private readonly SignInManager<ApplicationUser> _signInManager;
        private readonly ILogger<LoginPrepModel> _logger;

        public LoginPrepModel(SignInManager<ApplicationUser> signInManager, ILogger<LoginPrepModel> logger)
        {
            _signInManager = signInManager;
            _logger = logger;
        }

        public async Task OnGetAsync()
        {
            if ( _logger.IsEnabled(LogLevel.Debug))
            {
                _logger.LogDebug("[LoginPrepModel][OnGetAsync] => Signing out all authentication schemes.");
                
                ApplicationUser appUser =  _signInManager.UserManager.GetUserAsync(HttpContext.User).Result;
                _logger.LogDebug("[LoginPrepModel][OnGetAsync] => Signing out '" + appUser.UserName + "'");
                _logger.LogDebug("[LoginPrepModel][OnGetAsync] => Deleting all cookies");
                _logger.LogDebug("[LoginPrepModel][OnGetAsync] => Redirecting to login page");
            }

            await HttpContext.SignOutAsync(IdentityConstants.ApplicationScheme);
            await HttpContext.SignOutAsync(IdentityConstants.ExternalScheme);
            await HttpContext.SignOutAsync(IdentityConstants.TwoFactorRememberMeScheme);
            await HttpContext.SignOutAsync(IdentityConstants.TwoFactorUserIdScheme);

            await _signInManager.SignOutAsync();

            foreach (var cookieKey in Request.Cookies.Keys)
            {
                Response.Cookies.Delete(cookieKey);
            }
        }
    }
}