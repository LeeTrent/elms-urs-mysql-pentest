using System;
using System.Text;
using Microsoft.AspNetCore.Http;
using Microsoft.Extensions.Logging;
using lmsextreg.Repositories;
using lmsextreg.Models;
using lmsextreg.Constants;

namespace lmsextreg.Services
{
    public class SessionCookieService : ISessionCookieService
    {
        private readonly ISessionCookieRepository _sessionCookieRepo;
        private readonly ILogger<SessionCookieService> _logger;

        public SessionCookieService (   ISessionCookieRepository sessionCookieRepository,
                                        ILogger<SessionCookieService> logger
                                    )
        {
            _sessionCookieRepo = sessionCookieRepository;
            _logger = logger;
        }

        public void RecordSessionCookie(string userName, IRequestCookieCollection cookies)
        {
            _logger.LogDebug("[SessionCookieService][RecordSessionCookie] =>");
            
            if ( _logger.IsEnabled(LogLevel.Debug) )
            {
                foreach (var cookieKey in cookies.Keys)
                {
                    _logger.LogDebug("[SessionCookieService][RecordSessionCookie] => cookieKey: '" + cookieKey + "'");
                }
            }

            SessionCookie oldCookie = _sessionCookieRepo.Retrieve(userName, MiscConstants.SESSION_COOKIE_NAME);
            if ( oldCookie != null)
            {
                _logger.LogDebug("[SessionCookieService][RecordSessionCookie] => Deleting oldCookie");
                _sessionCookieRepo.Delete(oldCookie);
            }
            
            if ( cookies[MiscConstants.SESSION_COOKIE_NAME] == null ) 
            {
                StringBuilder sb = new StringBuilder("[SessionCookieService][RecordSessionCookie] => Session cookie '");
                sb.Append(MiscConstants.SESSION_COOKIE_NAME);
                sb.Append("' for User '");
                sb.Append(userName);
                sb.Append("' NOT FOUND!");
                string errMsg = sb.ToString();

                _logger.LogError(errMsg);
                throw new ApplicationException(errMsg);
            }

            SessionCookie newCookie = new SessionCookie
            {
                UserName = userName,
                CookieName = MiscConstants.SESSION_COOKIE_NAME,
                CookieValue = cookies[MiscConstants.SESSION_COOKIE_NAME],
                LastAccessedOn = DateTime.Now
            };
            
            if ( _logger.IsEnabled(LogLevel.Debug) )
            {
                _logger.LogDebug("[SessionCookieService][RecordSessionCookie]=> Saving new SessionCookie to the database: ");
                _logger.LogDebug(newCookie.ToString());
            }

            _sessionCookieRepo.Create(newCookie);
            
            _logger.LogDebug("<=[SessionCookieService][RecordSessionCookie]");            
        }
        // public void RetrieveSessionCookie(string userName, IRequestCookieCollection cookies)
        // {

        // }
        // public void RefreshSessionCookie(string userName, string cookieName, string cookieValue)
        // {

        // }        


        // public void LogSession (string userName, string cookieName, string cookieValue)
        // {
        //    var sessionCookie = new SessionCookie
        //     {
        //         UserName = userName,
        //         CookieName = cookieName,
        //         CookieValue = cookieValue,
        //         LastAccessedOn = DateTime.Now
        //     };

        //     _sessionCookieRepo.Create(sessionCookie);

        // }
 
        // public SessionCookie RetrieveSessionCookie(string cookieValue)
        // {
        //     return _sessionCookieRepo.Retrieve(cookieValue);
        // }

        // public bool isValidSession(string cookieName, string cookieValue)
        // {
        //     var sessionCookie = _sessionCookieRepo.Retrieve(cookieValue);

        //     if ( sessionCookie == null )
        //     {
        //         StringBuilder sb = new StringBuilder("SessionCookie with the following value was not found: '");
        //         sb.Append(cookieValue);
        //         sb.Append("'.");
        //         _logger.LogInformation(sb.ToString());

        //         return false;
        //     }

        //     if ( DateTime.Now > sessionCookie.LastAccessedOn.AddMinutes(30) )
        //     {
        //         StringBuilder sb = new StringBuilder("SessionCookie with the following value has expired: '");
        //         sb.Append(cookieValue);
        //         sb.Append("'.");
        //         sb.Append("\nThis SessionCookie was last accession on: ");
        //         sb.Append(sessionCookie.LastAccessedOn);
        //         sb.Append(".");
        //         _logger.LogInformation(sb.ToString());

        //         return false;
        //     }

        //     return true;
        // }

        // public void refreshSessionCookie(string cookieName, string cookieValue)
        // {
        //     var sessionCookie = _sessionCookieRepo.Retrieve(cookieValue);

        //     if ( sessionCookie == null )
        //     {
        //         StringBuilder sb = new StringBuilder("SessionCookie with the following value was not found: '");
        //         sb.Append(cookieValue);
        //         sb.Append("'.");
        //         sb.Append("\nCannot refresh session cookie.");

        //         string errMsg = sb.ToString();

        //         _logger.LogInformation(errMsg);
        //         throw new Exception(errMsg);
        //     }

        //     sessionCookie.LastAccessedOn = DateTime.Now;
        //     _sessionCookieRepo.Update(sessionCookie);
        // }
    }
}